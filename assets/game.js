//define variables
	//this guy tracks how many guesses you have left until the game triggers a change in the losses variable
var guessLeft =10;
	//tracks wins which is registered when a conditional detects that the word has been guessed.
var wins=0;
	// tracks losses which is triggered when a conditional detects that the guessLeft variable has hit zero.
var losses=0;
	// An array that tracks previous guesses. this will be checked against the userInput generated by the onkeyup.
var lettersGuessed=["Press space to begin"];
	// This array is used to display underscores if a letter doesnt exist in lettersGuessed and reveal letters when they do.
var display=["press space to begin"];
	// This is the test word to get. eventually this will be an array of arrays that will use a random to select a random index and word.
var wordToGet=["s","e","p","u","l","c","h","e","r"];//
	// This is where the html data is stored. this var is called in the initialize function and at the end of every onkeyup event.
var html =
	 	   "<p> Word to Guess: " + display + "</p>" +
           "<p>Remaining attempts " + guessLeft + "</p>" +
           "<p>You chose: " + lettersGuessed + "</p>" +
           "<p> Wins: " + wins + "</p>" +
           "<p> Losses: " + losses + "</p>"
         ;
var guessCorrect = false;	
//define functions
	//this function checkGuess should first detect if an input is valid: letters only and no letters that youve guessed already.
	//Secondly it should run the input against the wordToGet array. the loop should go through th word length and if the player doesnt get any hits
	// a boolean should trigger a loss in guessLeft. if any part f the loop gets a hiit the boolean changes and no change is recorded.
	//Lastly any time the loop gets a correct hit the display should change from an underscore to the correst letter
	function checkGuess(userInput){
		
	}
	//initialize function this guy should be called on page load and whenever wordToGet matches display. A win should trigger on this event as well.
	//here is where a random selector should set wordToGet and then set display to a bunch of underscores the length of wordToGet.

	function initialize(){
		console.log("initialize has fired")
		html =
	 	   "<p> Word to Guess: " + display + "</p>" +
           "<p>Remaining attempts " + guessLeft + "</p>" +
           "<p>You chose: " + lettersGuessed + "</p>" +
           "<p> Wins: " + wins + "</p>" +
           "<p> Losses: " + losses + "</p>"
         ;	
		document.querySelector("#game").innerHTML = html;
		display=[];
		for(k=0;k<wordToGet.length;k++){
			display[k] = " _ ";
		}
		html =
	 	   "<p> Word to Guess: " + display + "</p>" +
           "<p>Remaining attempts " + guessLeft + "</p>" +
           "<p>You chose: " + lettersGuessed + "</p>" +
           "<p> Wins: " + wins + "</p>" +
           "<p> Losses: " + losses + "</p>"
         ;	
		document.querySelector("#game").innerHTML = html;
		 lettersGuessed=[];
		 guessLeft = 10;
	}
//process
	//This onkeyup is where everything happens.
	//need to call an initialize fuction here to set the word and set the display as underscores the length of the word.
document.addEventListener("DOMContentLoaded", initialize());
	
document.onkeyup=function(event){
	var userInput=event.key;
	userInput=userInput.toLowerCase();
	//no repeat guesses
	for (j=0;j<lettersGuessed.length;j++){
		if (userInput===lettersGuessed[j]){
			return;
		
	}	
	//this is to check the user input against the word to guess.
	for (i=0;i<wordToGet.length;i++){
			if (userInput===wordToGet[i])
			{
				display[i] = wordToGet[i];
				guessCorrect=true;
				console.log("correct");
			}
			else{
				console.log("Incorrect");

				}
		}
		
	}
	//This is where userInput gets pushed to lettersGuessed.
	 lettersGuessed.push(userInput);
	 	//this should increment the score if no hits on correct were made.
	if (guessCorrect = false) {
	 		console.log("hello?");
			guessLeft--;
		}
	//bool resets here
	guessCorrect=false;
	// This is wheree the Display is updated for the game. logic shoulde go above here.
	html =
	 	   "<p> Word to Guess: " + display + "</p>" +
           "<p>Remaining attempts " + guessLeft + "</p>" +
           "<p>You chose: " + lettersGuessed + "</p>" +
           "<p> Wins: " + wins + "</p>" +
           "<p> Losses: " + losses + "</p>"
         ;	
    document.querySelector("#game").innerHTML = html;
}
//rememer, you need to creat a loop that checks the lettersGuessed array against user input before pushing user input to exit the process
//if the user tries to guess the same letter twice. this code can be used later when you check the array of arrays that the computer is grabbing
//the hidden question from. this way you can have multiple words to guess. dont forget to reset lettersGuessed array but not reset the array that saves
//the words youve already used. lastly create an array check for the wordtoGet and include a boolean that keeps track of whether the userinput got a hit or not
//if the user got a hit the letter reveals and the guessLeft score doesnt change. otherwise the check will reveal nothing and reduce your score. wins and losses can be recorded here.